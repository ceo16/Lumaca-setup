version: 1.0.{build}
image: Visual Studio 2019
build_script:
- cmd: "@echo off\nsetlocal EnableDelayedExpansion\n\ngoto:rem\n---------------------------------------\nbuild.bat\n---------------------------------------\nThis batch script is made to help download all the required software for RetroBat,\nto set the default configuration and to build the setup from sources.\n---------------------------------------\n:rem\n\n:: ---- BUILDER OPTION ----\n\nset lumaca_version=1.0.0\nset retroarch_version=1.16.0\n\nset get_batgui=0\nset get_batocera_ports=1\nset get_bios=1\nset get_decorations=1\nset get_default_theme=1\nset get_emulationstation=1\nset get_emulators=0\nset get_lrcores=1\nset get_retroarch=1\nset get_lumaca_binaries=1\nset get_system=1\nset get_wiimotegun=1\n\n:: ---- ARCHIVE OPTIONS ----\n\n:: archive_format: zip|7z\n:: archive_compression: 0|1|3|5|7|9\n\nset archive_format=zip\nset archive_compression=3\n\n:: ---- LOOP LIST ----\n\nset setup_compiler=ISCC\n\nset deps_list=(git !setup_compiler! 7za wget curl)\nset submodules_list=(bios decorations system)\nset packages_list=(lumaca_binaries batgui emulationstation default_theme batocera_ports mega_bezels retroarch roms wiimotegun)\nset legacy_cores_list=(4do emuscv hatarib imageviewer mame2014 mame2016)\nset emulators_black_list=(3dsen pico8 retroarch ryujinx steam teknoparrot yuzu yuzu-early-access)\n\n:: ---- GET STARTED ----\n\nset script_type=builder\nset user_choice=0\nset git_branch=master\nset branch=beta\nset release_version=null\nset log_file=build.log\nset exit_timeout=0\n\n:loop_arg\n\nif not \"%1\"==\"\" (\n\n	if \"%1\"==\"-config\" (\n\n		set custom_config=%2\n		shift\n	)\n\n	shift\n	goto :loop_arg\n)\n\ncall :set_root\ncall :set_install\ncall :set_builder\n\nif %user_choice% NEQ 0 (\n\n	if %user_choice% EQU 1 (\n		call :get_packages\n		call :set_config\n		call :build_setup\n		call :create_archive\n		call :exit_door\n		goto :eof\n	)\n	\n	if %user_choice% EQU 2 (\n		call :get_packages\n		call :set_config\n		call :exit_door\n		goto :eof\n	)\n	\n	if %user_choice% EQU 3 (\n		call :build_setup\n		call :exit_door\n		goto :eof\n	)\n	\n	if %user_choice% EQU 4 (\n		call :create_archive\n		call :exit_door\n		goto :eof\n	)\n	\n	if %user_choice% EQU 5 (\n		call :butler_push\n		call :exit_door\n		goto :eof\n	)\n)\n\n:: ---- UI ----\n\ncall :banner\n\necho  This script can help you to download all the required \necho  softwares and build the Lumaca Setup with the NullSoft \necho  Scriptable Install System.\necho +===========================================================+\necho  (1) - full compilation\necho  (2) - download, configure\necho  (3) - build setup executable\necho  (4) - archive\nif exist \"!root_path!\\butler_push.txt\" echo  (5) - push\necho  (Q) - Quit\necho +===========================================================+\nif not exist \"!root_path!\\butler_push.txt\" choice /C 1234Q /N /T 20 /D 1 /M \"Please type your choice here: \"\nif exist \"!root_path!\\butler_push.txt\" choice /C 12345Q /N /T 20 /D 1 /M \"Please type your choice here: \"\necho +===========================================================+\nset user_choice=%ERRORLEVEL%\n\nif %user_choice% EQU 1 (\n\n	call :get_packages\n	call :set_config\n	call :build_setup\n	call :create_archive\n	call :exit_door\n	goto :eof\n)\n\nif %user_choice% EQU 2 (\n\n	call :get_packages\n	call :set_config\n	call :exit_door\n	goto :eof\n)\n\nif %user_choice% EQU 3 (\n\n	call :build_setup\n	call :exit_door\n	goto :eof\n)\n\nif %user_choice% EQU 4 (\n\n	call :create_archive\n	call :exit_door\n	goto :eof\n)\n\nif not exist \"!root_path!\\butler_push.txt\" if %user_choice% EQU 5 (\n\n	(set exit_code=0)\n	call :exit_door\n	goto :eof\n)\n\nif exist \"!root_path!\\butler_push.txt\" if %user_choice% EQU 5 (\n\n	call :butler_push\n	call :exit_door\n	goto :eof\n)\n\nif exist \"!root_path!\\butler_push.txt\" if %user_choice% EQU 6 (\n\n	(set exit_code=0)\n	call :exit_door\n	goto :eof\n)\n\n:: ---- LABELS ----\n\n:: ---- SET ROOT PATH ----\n\n:set_root\n\nset task=set_root\n\nset current_file=%~nx0\nset current_drive=\"%cd:~0,2%\"\nset current_dir=\"%cd:~3%\"\nset current_drive=%current_drive:\"=%\nset current_dir=%current_dir:\"=%\nset current_path=!current_drive!\\!current_dir!\nset root_path=!current_path!\n\nif not \"%log_file%\" == \"\" if exist \"!root_path!\\%log_file%\" del/Q \"!root_path!\\%log_file%\" >nul\n(echo %date% %time% [START] Run: !current_file!)>> \"!root_path!\\%log_file%\"\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n(echo %date% %time% [INFO] Current Path: \"!current_path!\")>> \"!root_path!\\%log_file%\"\n\ngoto :eof\n\n:: ---- SET INSTALL INFOS ----\n\n:set_install\n\nset task=set_install\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n\n:: ---- SET CUSTOM OPTIONS ----\n\nif not \"!custom_config!\" == \"\" if exist \"!root_path!\\!custom_config!\" (\n\n	for /f \"delims=\" %%x in (!root_path!\\!custom_config!) do (set %%x)\n	(echo %date% %time% [INFO] Using build config file: \"!custom_config!\")>> \"!root_path!\\%log_file%\"\n)\n\n:: ---- SET TMP FILE ----\n\nset tmp_infos_file=!root_path!\\rb_infos.tmp\nif not \"%tmp_infos_file%\" == \"\" if exist \"!tmp_infos_file!\" del/Q \"!tmp_infos_file!\"\n\n:: ---- CALL SHARED VARIABLES SCRIPT ----\n\nif exist \"!root_path!\\system\\scripts\\shared-variables.cmd\" (\n\n	cd \"!root_path!\\system\\scripts\"\n	call shared-variables.cmd	\n	\n) else (\n\n	(set exit_code=2)\n	call :exit_door\n	goto :eof\n)\n\n:: ---- GET INFOS STORED IN TMP FILE ----\n\nif exist \"!tmp_infos_file!\" (\n\n	for /f \"delims=\" %%x in ('type \"!tmp_infos_file!\"') do (set \"%%x\") \n	if not \"%tmp_infos_file%\" == \"\" del/Q \"!tmp_infos_file!\"\n	\n) else (\n\n	(set/A exit_code=2)\n	call :exit_door\n	goto :eof\n)\n\n(echo %date% %time% [INFO] Version: %name%-%lumaca_version%-%branch%)>> \"!root_path!\\%log_file%\"\n(echo %date% %time% [INFO] Build Path: \"!build_path!\")>> \"!root_path!\\%log_file%\"\n(echo %date% %time% [INFO] Download Path: \"!download_path!\")>> \"!root_path!\\%log_file%\"\n\n:: ---- WINDOW TITLE ----\n\ntitle !name! builder script\n\ngoto :eof\n\n:: ---- DEPENDENCIES CHECKING ----\n\n:set_builder\n\nset task=set_builder\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n\ncall :banner\n\necho :: SETTING BUILD ENVIRONMENT...\n\nif not exist \"!build_path!\\.\" md \"!build_path!\"\nif not exist \"!download_path!\\.\" md \"!download_path!\"\n\n(set/A found_total=0)\n\nif \"%archx%\"==\"x86_64\" (set \"git_path=%ProgramFiles%\\Git\\cmd\") else (set \"git_path=%ProgramFiles(x86)%\\Git\\cmd\")\n\nfor %%i in %deps_list% do (\n\n	(set/A found_%%i=0)\n	(set/A found_total=!found_total!+1)\n	(set package_name=%%i)\n	(set buildtools_path=!root_path!\\system\\tools)\n	\n	if \"!package_name!\"==\"git\" (set buildtools_path=!git_path!)\n	if \"!package_name!\"==\"makensis\" (set \"buildtools_path=%ProgramFiles(x86)%\\NSIS\" & set \"compiler_path=!buildtools_path!\")\n	if \"!package_name!\"==\"ISCC\" (set \"buildtools_path=%ProgramFiles(x86)%\\Inno Setup 6\" & set \"compiler_path=!buildtools_path!\")\n	\n	if exist \"!buildtools_path!\\!package_name!.exe\" (\n	\n		(set/A found_%%i=!found_%%i!+1)\n		(echo %%i: found)\n		(echo %date% %time% [INFO] %%i: found)>> \"!root_path!\\%log_file%\"\n		\n	) else (\n	\n		(echo %%i: not found)\n		(echo %date% %time% [INFO] %%i: not found)>> \"!root_path!\\%log_file%\"\n	)\n	\n	(set/A found_total=!found_total!-!found_%%i!)		\n)\n\nif !found_total! NEQ 0 (\n	\n	(set/A exit_code=2)\n	call :exit_door\n	goto :eof\n)\n	\ntimeout /t 3 >nul\n\ngoto :eof\n\n:: ---- GET PACKAGES ----\n\n:get_packages\n\nset task=get_packages\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n\necho :: GETTING REQUIRED PACKAGES...\n\ncd !root_path!\ngit submodule update --init\n\nif %ERRORLEVEL% NEQ 0 (\n\n	(set/A exit_code=%ERRORLEVEL%)\n	call :exit_door\n	goto :eof\n)\n\nif \"%get_lumaca_binaries%\"==\"1\" (\n	for %%i in (txt) do (xcopy \"!root_path!\\*.%%i\" \"!build_path!\" /v /y)\n	if exist \"!build_path!\\butler_push.txt\" del/Q \"!build_path!\\butler_push.txt\"\n	\n	(echo %date% %time% [INFO] lumaca_binaries copied to \"!build_path!\")>> \"!root_path!\\%log_file%\"\n)\n\nfor %%i in %submodules_list% do (\n\n	if \"!get_%%i!\"==\"1\" (\n	\n		(set package_name=%%i)\n		(set destination_path=!%%i_path!)\n	\n		if \"!package_name!\"==\"bios\" (set folder=bios)\n		if \"!package_name!\"==\"default_theme\" (set folder=emulationstation\\.emulationstation\\themes\\Hypermax-plus+_VMan)\n		if \"!package_name!\"==\"decorations\" (set folder=system\\decorations)\n		if \"!package_name!\"==\"system\" (set folder=system)\n		\n		xcopy \"!root_path!\\!folder!\" \"!destination_path!\\\" /s /e /v /y\n		\n		(echo %date% %time% [INFO] !package_name! copied to \"!destination_path!\")>> \"!root_path!\\%log_file%\"		\n	)\n)\n\nfor %%i in %packages_list% do (\n\n	if \"!get_%%i!\"==\"1\" (\n		\n		(set package_name=%%i)\n		(set package_file=%%i.7z)\n		(set download_url=!%%i_url!)\n		(set destination_path=!%%i_path!)\n\n		if \"!package_name!\"==\"lumaca_binaries\" (set package_file=%%i_%git_branch%.7z)\n		if \"!package_name!\"==\"emulationstation\" (set package_file=EmulationStation-Win32.zip)\n		if \"!package_name!\"==\"batocera_ports\" (set package_file=batocera-ports.zip)\n		if \"!package_name!\"==\"retroarch\" (set package_file=RetroArch.7z)\n		if \"!package_name!\"==\"wiimotegun\" (set package_file=WiimoteGun.zip)\n		if \"!package_name!\"==\"default_theme\" (set package_file=master.zip)\n		\n                call :download\n		call :extract		\n	)\n)\n\nif \"%get_lrcores%\"==\"1\" (\n\n	for /f \"usebackq delims=\" %%x in (\"%system_path%\\configgen\\lrcores_names.lst\") do (\n\n		(set package_name=%%x)\n		(set package_file=%%x_libretro.dll.zip)\n		(set download_url=%lrcores_url%/!package_file!)\n		(set destination_path=%lrcores_path%)\n\n		call :download\n		call :hash_file\n		call :extract	\n	)\n)\n\nif \"%get_emulators%\"==\"1\" (\n\n	for /f \"usebackq delims=\" %%x in (\"%system_path%\\configgen\\emulators_names.lst\") do (\n\n		(set package_name=%%x)\n		(set package_file=%%x.7z)\n		(set download_url=%emulators_url%)\n		(set destination_path=!emulators_path!\\%%x)\n		\n		set skip=1\n		\n		for %%i in %emulators_black_list% do (\n		\n			if \"!package_name!\"==\"%%i\" (set skip=1)\n		)\n		\n		if \"!skip!\"==\"1\" (\n\n			call :download\n			call :hash_file\n			call :extract\n		)\n	)\n)\n\ngoto :eof\n\n:: ---- SET RETROBAT CONFIG ----\n\n:set_config\n\nset task=set_config\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n\necho :: SETTING CONFIG FILES...\n\nfor /f \"usebackq delims=\" %%x in (\"%system_path%\\configgen\\lumaca_tree.lst\") do (if not exist \"!build_path!\\%%x\\.\" md \"!build_path!\\%%x\")\nfor /f \"usebackq delims=\" %%x in (\"%system_path%\\configgen\\emulators_names.lst\") do (if not exist \"!build_path!\\emulators\\%%x\\.\" md \"!build_path!\\emulators\\%%x\")\nfor /f \"usebackq delims=\" %%x in (\"%system_path%\\configgen\\systems_names.lst\") do (if not exist \"!build_path!\\roms\\%%x\\.\" md \"!build_path!\\roms\\%%x\")\nfor /f \"usebackq delims=\" %%x in (\"%system_path%\\configgen\\systems_names.lst\") do (if not exist \"!build_path!\\saves\\%%x\\.\" md \"!build_path!\\saves\\%%x\")\n\nif exist \"!build_path!\\lumaca.exe\" (\n\n	\"!build_path!\\lumaca.exe\" /NOF #GetConfigFiles\n	\"!build_path!\\lumaca.exe\" /NOF #SetEmulationStationSettings\n	\"!build_path!\\lumaca.exe\" /NOF #SetEmulatorsSettings\n	\n	if %ERRORLEVEL% NEQ 0 (\n		(set/A exit_code=%ERRORLEVEL%)\n		call :exit_door\n		goto :eof\n	)\n\n) else (\n\n	(set/A exit_code=2)\n	call :exit_door\n	goto :eof	\n)\n\nif exist \"!build_path!\\lumaca.ini\" del/Q \"!build_path!\\lumaca.ini\"\n\nif exist \"!system_path!\\templates\\emulationstation\\es_features.locale\\.\" xcopy \"!system_path!\\templates\\emulationstation\\es_features.locale\" \"!emulationstation_path!\\es_features.locale\\\" /s /e /v /y\n\nif exist \"!system_path!\\resources\\emulationstation\\video\\*.mp4\" xcopy /v /y \"!system_path!\\resources\\emulationstation\\video\\*.mp4\" \"!build_path!\\emulationstation\\.emulationstation\\video\"\nif exist \"!system_path!\\resources\\emulationstation\\music\\*.ogg\" xcopy /v /y \"!system_path!\\resources\\emulationstation\\music\\*.ogg\" \"!build_path!\\emulationstation\\.emulationstation\\music\"\n\nif not exist \"!build_path!\\system\\version.info\" (\n\n	(set timestamp=%date:~6,4%%date:~3,2%%date:~0,2%)\n	\n	if \"%branch%\" == \"stable\" (\n		(set release_version=%lumaca_version%-%branch%-%arch%)\n	) else (\n		(set release_version=%lumaca_version%-!timestamp!-%branch%-%arch%)\n	)\n	\n	(echo|set/P=!release_version!)> \"!build_path!\\system\\version.info\"	\n)\n\necho build version is: !release_version!\n\n(set/A exit_code=0)\n\ngoto :eof\n\n:: ---- BUILD RETROBAT SETUP ----\n\n:build_setup\n\nset task=build_setup\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n\necho :: BUILDING RETROBAT SETUP...\n\ncall :check_version\n\nset package_file=%name%-v%release_version%-setup.exe\n\nif not exist \"!build_path!\\%package_file%\" (\n\n	if \"%setup_compiler%\"==\"makensis\" (\"!compiler_path!\\makensis.exe\" /V4 /DRELEASE_VERSION=%release_version%  \"!root_path!\\installer\\setup.nsi\")\n	if \"%setup_compiler%\"==\"ISCC\" if \"%archx%\"==\"x86_64\" (\"!compiler_path!\\ISCC.exe\" /DMyAppVersion=%release_version% /DMyAppArchitecture=x64 /DSourceDir=\"!build_path!\" /DInstallRootUrl=\"%installroot_url%/repo/%arch%\" \"!root_path!\\installer\\installer.iss\")\n	if \"%setup_compiler%\"==\"ISCC\" if \"%archx%\"==\"x86\" (\"!compiler_path!\\ISCC.exe\" /DMyAppVersion=%release_version% /DMyAppArchitecture=x86 /DSourceDir=\"!build_path!\" /DInstallRootUrl=\"%installroot_url%/repo/%arch%\" \"!root_path!\\installer\\installer.iss\")\n)\n\ntimeout/t 2 >nul\n \nif exist \"!root_path!\\installer\\%package_file%\" (\n\n	(set/A exit_code=0)\n	move /Y \"!root_path!\\installer\\%package_file%\" \"!build_path!\"\n	(echo %date% %time% [INFO] Build \"%package_file%\" in \"!build_path!\")>> \"!root_path!\\%log_file%\"\n)\n\ncall :hash_file	\n\ngoto :eof\n\n:: ---- CREATE ARCHIVE ----\n\n:create_archive\n\nset task=create_archive\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n\necho :: CREATING ARCHIVE...\n\ncall :check_version\n\nset package_file=%name%-v%release_version%.%archive_format%\nset exclude_list=(exclude.lst hash_list.txt %name%-v%release_version%-setup.exe %name%-v%release_version%-setup.exe.sha256.txt %name%-v%release_version%.%archive_format% %name%-v%release_version%.%archive_format%.sha256.txt)\n\nif not exist \"!build_path!\\%package_file%\" (\n\n	if exist \"!build_path!\\exclude.lst\" del/Q \"!build_path!\\exclude.lst\"	\n	for %%i in %exclude_list% do ((echo \"%%i\")>> \"!build_path!\\exclude.lst\")\n\n	!buildtools_path!\\7za.exe a -t%archive_format% \"!build_path!\\%package_file%\" \"!build_path!\\*\" -xr@\"!build_path!\\exclude.lst\" -mx=%archive_compression%	\n	if exist \"!build_path!\\exclude.lst\" del/Q \"!build_path!\\exclude.lst\"\n)\n\nif exist \"!build_path!\\%package_file%\" (\n\n	(set/A exit_code=0)\n	(echo %date% %time% [INFO] Created \"%package_file%\" in \"!build_path!\")>> \"!root_path!\\%log_file%\"\n)\n\ncall :hash_file\n\ngoto :eof\n\n:: ---- BUTLER PUSH ----\n\n:: need butler installed and dummy butler_push.txt\n\n:butler_push\n\nset task=butler_push\n(echo %date% %time% [LABEL] :!task!)>> \"!root_path!\\%log_file%\"\n\necho :: PUSHING BUTLER...\n\ncall :check_version\n\nif exist \"!build_path!\\system\\version.info\" (\n	butler push \"!build_path!\\%name%-v%release_version%-setup.exe\" lumacaofficial/lumaca:%arch%-%branch% --userversion-file \"!build_path!\\system\\version.info\"\n	butler push --ignore \"!build_path!\\%name%-v%release_version%-setup.exe\" --ignore \"!build_path!\\%name%-v%release_version%-setup.exe.sha256\" --ignore \"%name%-v%release_version%.%archive_format%\" --ignore \"%name%-v%release_version%.%archive_format%.sha256\" --ignore \"!build_path!\\*.log\" --ignore \"!build_path!\\hash_list.txt\" --ignore \"!build_path!\\emulationstation\\.emulationstation\\es_settings.cfg\" \"!build_path!\\\" lumacaofficial/lumaca:%arch%-%branch% --userversion-file \"!build_path!\\system\\version.info\"\n	(set/A exit_code=%ERRORLEVEL%)\n)\n\nif %exit_code% EQU 0 ((echo %date% %time% [INFO] Pushed \"%name%-v%release_version%\")>> \"!root_path!\\%log_file%\")\n\ngoto :eof\n\n:: ---- BANNER ----\n\n:banner\n\ncls\necho +===========================================================+\necho  !name! builder script\necho +===========================================================+\ngoto :eof\n\n:: ---- DOWNLOAD PACKAGES ----\n\n:download\n\necho *************************************************************\n\nfor %%j in %legacy_cores_list% do (\n\n	if \"!package_name!\"==\"%%j\" (set download_url=https://www.retrobat.ovh/repo/%arch%/legacy/lrcores)\n)\n\nif exist \"%download_path%\\%package_file%\" goto :eof\n\n\"%buildtools_path%\\wget\" --continue --no-check-certificate --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 3 -P \"%download_path%\" !download_url!/!package_file! -q --show-progress\n(set/A exit_code=%ERRORLEVEL%)\n\nif not exist \"%download_path%\\%package_file%\" (\n\n	call :exit_door\n	goto :eof\n)\n\n(echo %date% %time% [INFO] Get !package_name! from !download_url!)>> \"!root_path!\\%log_file%\"\n\ngoto :eof\n\n:: ---- EXTRACT PACKAGES ----\n\n:extract\n\necho *************************************************************\n\nif not exist \"%extraction_path%\\.\" md \"%extraction_path%\"\n\"%buildtools_path%\\7za.exe\" -y x \"%download_path%\\%package_file%\" -aoa -o\"%extraction_path%\"\n\nset true=1\n\nif \"!package_name!\"==\"retroarch\" (\n\n	set true=0\n	\n	if \"%archx%\"==\"x86_64\" (\n				\n		xcopy \"%extraction_path%\\RetroArch-Win64\" \"%destination_path%\\\" /s /e /v /y\n		rmdir /s /q \"%download_path%\\extract\\RetroArch-Win64\"\n	)\n	\n	if \"%archx%\"==\"x86\" (\n	\n		xcopy \"%extraction_path%\\RetroArch\" \"%destination_path%\\\" /s /e /v /y\n		rmdir /s /q \"%download_path%\\extract\\RetroArch\"\n	)	\n) \n\nif \"%true%\"==\"1\" (\n\n	xcopy \"%extraction_path%\" \"%destination_path%\\\" /e /v /y\n)\n \nrmdir /s /q \"%download_path%\\extract\"\nif not \"%package_file%\" == \"\" del/Q \"%download_path%\\%package_file%\"\n\n(echo %date% %time% [INFO] Copy !package_name! to !destination_path!)>> \"!root_path!\\%log_file%\"\n\ngoto :eof\n\n:: ---- CHECK VERSION ----\n\n:check_version\n\nif \"%release_version%\"==\"null\" (\n\n	if exist \"!build_path!\\system\\version.info\" (\n	\n		set/P release_version=<\"!build_path!\\system\\version.info\"\n		\n	) else (\n	\n		(set/A exit_code=2)\n		goto :eof\n	)\n)\n\ngoto :eof\n\n:: ---- HASH FILE ----\n\n:hash_file\n\nif \"!task!\" == \"get_packages\" (\n\n	set hash_path=!download_path!\n	\n) else (\n\n	set hash_path=!build_path!\n\n)\n\nif exist \"!hash_path!\\!package_file!\" (\n\n	(set \"first_line=1\")\n	for /f \"skip=1 delims=\" %%i in ('certutil -hashfile \"!hash_path!\\!package_file!\" SHA256') do (\n		if [!first_line!]==[1] (\n			(set file_hash=%%i)\n			(set \"first_line=0\")\n		)\n	)\n\n	if \"!task!\" == \"get_packages\" (\nREM		(echo !package_name!_sha256=!file_hash!)>> \"!build_path!\\hash_list.txt\"\nREM		(echo %date% %time% [INFO] !package_name!_sha256=!file_hash! ^> \"!build_path!\\hash_list.txt\")>> \"!root_path!\\%log_file%\"\n	)\n	\n	if not \"!task!\" == \"get_packages\" (\n		(echo|set/P=!file_hash!)> \"!build_path!\\!package_file!.sha256.txt\"\n		(echo %date% %time% [INFO] Created \"!package_file!.sha256.txt\" in \"!build_path!\")>> \"!root_path!\\%log_file%\"\n	)\n)\n\ngoto :eof"
artifacts:
- path: '*.zip'
  name: GitHub
- path: version.info
  name: GitHub
deploy:
  - provider: GitHub
    auth_token:
      secure: aeboYYL1NtnEGgT+uR8t8NZZIrGtoxhqI95TCX2g7lYpO62JdiYkbVcq+9tKpecD
    draft: false
    prerelease: false
